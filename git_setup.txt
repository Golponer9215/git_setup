#QUESTION 1
 What is Version Control?
Version control is a system that helps you track changes in your files or code over time.

Think of it like a "save game" feature in a video game â€” every time you save, you can go back to that point later. In coding, version control lets you save your project at different stages and go back if needed.

#QUESTION 2
What is Version Control Used For?
Version control is used to:

Save versions of your project (code, documents, etc.)

Undo mistakes by going back to older versions

Work with a team without overwriting each otherâ€™s work

See who changed what and when

Try new things without breaking your original code

QUESTION3
What is Git?
Git is a free tool (a type of version control system) that helps you manage your code versions locally on your computer.

With Git, you can:

Save your code history

Switch between different versions

Work on new features without affecting your main project

Git works offline, meaning you donâ€™t need internet to use it.

QUESTION4
What is GitHub?
GitHub is a website where you can store your Git projects online. It's like a cloud storage for your code.

With GitHub, you can:

Save your code online

Share it with others

Collaborate with teammates

Work on open-source projects

Use tools like pull requests and issues

#QUESTION5
Difference Between Git and GitHub


Git = the tool that tracks your code

GitHub = where you can upload your Git-tracked code to share it online


#QUESTION6
How to Install Git Step-by-Step
Go to https://git-scm.com

Click Download for your computer (Windows, Mac, or Linux).

After downloading, install it by clicking Next all the way.

When done, open your Terminal or Command Prompt.

Type this command to check if Git was installed:

git --version
If you see something like git version 2.41.0, it means it worked!

Set Up Git (First Time)
After installing Git, you need to tell it who you are.

Open your terminal and type:

git config --global user.name "Your Name"
git config --global user.email "you@example.com"
Replace "Your Name" and "you@example.com" with your real name and email.

How to Use GitHub
Step 1: Create a GitHub Account
Go to https://github.com

Sign up with your email and password.

Step 2: Create a Repository (Project Folder)
After logging in, click the + at the top-right and choose "New repository".

Type your repository name (e.g., my-first-project).

You can add a short description (optional).

Choose Public or Private.

Click Create repository.

ðŸ’» Link Git with GitHub (Push Your Code)
Step-by-step
Open your terminal

Go to your project folder:

bash
Copy
Edit
cd path-to-your-folder
Initialize Git in that folder:

git init
Add your files:

git add .
Commit your changes:


git commit -m "First commit"
Connect your GitHub repo:


git remote add origin https://github.com/yourusername/your-repo-name.git
Push (upload) your code:


git push -u origin main

 Challenges i Face
1. Git Commands Confusing
Sometimes itâ€™s hard to remember commands like git add, git commit, and git push.

Tip: Write them down or use a cheat sheet until you get used to it.

2. Error Messages
You might see errors like:

"Permission denied"

"fatal: not a git repository"

Tip: Donâ€™t panic. Just Google the error message. Everyone sees them when learning!

3. Push Failed
This happens when you try to push code without setting things up properly.

Tip: Make sure you did git remote add origin ... and that your GitHub repo is empty.


